#!/bin/bash

# Check if the certificate file exists
if [ ! -f "$1" ]; then
    echo "Certificate file not found."
    exit 1
fi

# Define variables
CERT_FILE="$1"
JKS_FILE="keystore.jks"
JKS_PASSWORD="your_keystore_password"
SECRET_NAME="my-secret"  # Change this to your desired secret name

# Import the certificate into the keystore
keytool -importcert -file "$CERT_FILE" -keystore "$JKS_FILE" -storepass "$JKS_PASSWORD" -noprompt

# Check if the import was successful
if [ $? -ne 0 ]; then
    echo "Certificate import failed."
    exit 1
fi

# Create the OpenShift secret
oc create secret generic "$SECRET_NAME" --from-file="$JKS_FILE" --type="opaque"

# Check if the secret creation was successful
if [ $? -eq 0 ]; then
    echo "OpenShift secret '$SECRET_NAME' created successfully."
else
    echo "OpenShift secret creation failed."
    exit 1
fi


---------------------------------------------------------------------------------------------

apiVersion: batch/v1
kind: Job
metadata:
  name: import-certificate-job
spec:
  template:
    spec:
      containers:
        - name: import-certificate-container
          image: your-registry/your-image:tag
          command: ["./your-import-script.sh"]
          # If you need to mount certificates or provide environment variables, include them here.
      restartPolicy: Never
--------------------------------------------------------------------------------------------------

# Use a base image
FROM alpine:latest

# Install required packages
RUN apk --no-cache add openssl openjdk11 curl jq

# Copy custom scripts
COPY custom-scripts /usr/local/bin/

# Set environment variables
ENV MY_VARIABLE=my_value

# Specify the default command to run when the container starts
CMD ["/bin/sh"]

