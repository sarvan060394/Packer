import pandas as pd
from kubernetes import client, config

def get_pods_in_namespace(kube_client, namespace):
    # Get the pods in the namespace using the provided kube_client
    dyn_client = DynamicClient(kube_client)
    pods = dyn_client.resources.get(api_version='v1', kind='Pod').get(namespace=namespace).obj
    return pods

def get_used_unused_pods(dyn_client, pods):
    # Process the pods using the provided dyn_client
    # ...

def process_cluster(cluster):
    # Set up kubeConfig for the current cluster
    kubeConfig = config.kube_config.KubeConfig()
    kubeConfig.host = cluster['apihost']
    kubeConfig.auth_provider = config.kube_config.get_auth_provider_from_user_pass(cluster['username'], cluster['password'])
    kubeConfig.verify_ssl = False

    # Get the pods in the namespace
    k8s_client = client.ApiClient(kubeConfig)
    dyn_client = DynamicClient(k8s_client)
    pods = get_pods_in_namespace(dyn_client, 'default')

    # Get the used and unused pods using the same dyn_client
    used_pods, unused_pods = get_used_unused_pods(dyn_client, pods)

    # Return the used and unused pods
    return used_pods, unused_pods

def main():
    # Define a list of clusters to check
    clusters = [
        {'apihost': 'https://api.cluster1.com', 'username': 'user1', 'password': 'pass1'},
        {'apihost': 'https://api.cluster2.com', 'username': 'user2', 'password': 'pass2'},
        # Add more clusters as needed
    ]

    # Process the clusters and append the results to excel_data
    excel_data = []
    for cluster in clusters:
        used_pods, unused_pods = process_cluster(cluster)
        excel_data.extend(used_pods)
        excel_data.extend(unused_pods)

    # Write the results to an Excel file
    df = pd.DataFrame(excel_data)
    df.to_excel('unused_images.xlsx', index=False)

if __name__ == "__main__":
    main()
